# Bus
- platform: entur_public_transport
  name: Buss
  stop_ids:
    - !secret buss_stop

- platform: darksky
  api_key: !secret dark_sky_api
  language: nb
  monitored_conditions:
    - summary
    - temperature
    - hourly_summary

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /home
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: process
      arg: docker-compose

- platform: uptime
  unit_of_measurement: hours

- platform: version

- platform: plex_recently_added
  name: Recently Added Movies
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - movie

- platform: plex_recently_added
  name: Recently Added TV
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - show

- platform: rest
  resource: http://ip.jsontest.com
  name: "External IP"
  value_template: '{{ value_json.ip }}'

- platform: command_line
  name: 'Node-red Online'
  command: response=$(curl -LIk -m 3 http://192.168.10.12:1880 -o /dev/null -w "%{http_code}\n" -s); test "$response" -ge 200 && echo "Online" || echo "Offline" 
  scan_interval: 90
  value_template: '{{ value }}'

- platform: command_line
  name: 'Z-Wave Online'
  command: response=$(curl -LIk -m 3 http://192.168.10.12:8091 -o /dev/null -w "%{http_code}\n" -s); test "$response" -ge 200 && echo "Online" || echo "Offline" 
  scan_interval: 90
  value_template: '{{ value }}'

- platform: command_line
  name: 'Deluge Online'
  command: response=$(curl -LIk -m 3 http://192.168.10.12:8112 -o /dev/null -w "%{http_code}\n" -s); test "$response" -ge 200 && echo "Online" || echo "Offline" 
  scan_interval: 90
  value_template: '{{ value }}'

- platform: command_line
  name: 'Portainer Online'
  command: response=$(curl -LIk -m 3 http://192.168.10.12:9000 -o /dev/null -w "%{http_code}\n" -s); test "$response" -ge 200 && echo "Online" || echo "Offline" 
  scan_interval: 90
  value_template: '{{ value }}'

- platform: template
  sensors:
    house_voltage:
      friendly_name: "Spenning"
      unit_of_measurement: 'V'
      icon_template: mdi:flash
      value_template: "{{ state_attr('switch.dryer', 'voltage') }}"

    drivhus_watts:
      friendly_name: "Drivhus usage"
      unit_of_measurement: 'W'
      icon_template: mdi:flash
      value_template: "{{ state_attr('switch.drivhus', 'current_power_w') }}"

    vaskemaskin_watts:
      friendly_name: "Vaskemaskin usage"
      unit_of_measurement: 'W'
      icon_template: mdi:washing-machine
      value_template: "{{ state_attr('switch.vaskemaskin', 'current_power_w') }}"

    torketrommel_watts:
      friendly_name: "Tørketrommel usage"
      unit_of_measurement: 'W'
      icon_template: mdi:tumble-dryer
      value_template: "{{ state_attr('switch.dryer', 'current_power_w') }}"

    projector_watts:
      friendly_name: "Projektor usage"
      unit_of_measurement: 'W'
      icon_template: mdi:projector
      value_template: "{{ state_attr('switch.projector', 'current_power_w') }}"

    power_total:
      friendly_name: "Pris pr kWh"
      unit_of_measurement: 'NOK/kWh'
      icon_template: mdi:flash
      value_template: "{{ (states('sensor.electricity_price_tostenhagen_54') | float) + (states('input_number.power_fee') | float) }}"

    drivhus_temp:
      unit_of_measurement: '°C'
      icon_template: hass:thermometer
      value_template: "{{ ((float(states('sensor.sensor1_temperature')) + float(states('sensor.sensor2_temperature'))) / 2) | round(2) }}"
      
    drivhus_lux:
      unit_of_measurement: 'lux'
      icon_template: hass:brightness-5
      value_template: "{{ ((float(states('sensor.sensor1_light')) + float(states('sensor.sensor2_light'))) / 2) | round(2) }}"

- platform: history_stats
  name: Stats Washing Machine
  entity_id: binary_sensor.vaskemaskin
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Stats Dryer
  entity_id: binary_sensor.torketrommel
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Stats Projector
  entity_id: binary_sensor.projector
  state: "on"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Stats Sonos Kitchen
  entity_id: media_player.kitchen
  state: "playing"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Stats Apple TV Living Room
  entity_id: media_player.stue_2
  state: "playing"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"

- platform: history_stats
  name: Stats Apple TV Cinema
  entity_id: media_player.entertainment_room_2
  state: "playing"
  type: time
  duration:
    days: 7
  end: "{{ now() }}"